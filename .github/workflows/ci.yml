name: CI
on:
  pull_request:
  push:
  schedule:
  - cron: '0 6 * * 4'
jobs:
  test:
    timeout-minutes: 50
    services:
      mysql:
        image: mysql:5.7
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: squeryl
          MYSQL_USER: squeryl
          MYSQL_PASSWORD: squeryl
        options: --health-cmd "mysqladmin ping -h localhost" --health-interval 20s --health-timeout 10s --health-retries 10
      postgres:
        image: postgres:13.1
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: squeryl
        ports:
          - 5432:5432
    strategy:
      fail-fast: false
      matrix:
        include:
          - java: 21
          - java: 11
          - java: 8
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
    - uses: actions/setup-java@8df1039502a15bceb9433410b1a100fbe190c53b # v4.5.0
      with:
        java-version: ${{ matrix.java }}
        distribution: temurin
    - uses: coursier/cache-action@142d2738bd29f0eb9d44610828acb3a19809feab # v6.4.6
    - run: |
        sbt -v scalafmtSbt "+ scalafmtAll" "+ Test/compile" "++ 2.13.x" "scalafixAll RemoveUnused"
        git diff --exit-code
    - if: ${{ (github.event_name == 'pull_request') && failure() }}
      run: |
        REVIEWDOG_VERSION="0.14.1"
        FILE_NAME="reviewdog_${REVIEWDOG_VERSION}_Linux_x86_64"
        wget -q https://github.com/reviewdog/reviewdog/releases/download/v${REVIEWDOG_VERSION}/${FILE_NAME}.tar.gz &&
        gunzip ${FILE_NAME}.tar.gz &&
        tar -xf ${FILE_NAME}.tar &&
        chmod +x ./reviewdog &&
        ./reviewdog -version
        export REVIEWDOG_GITHUB_API_TOKEN=${{ secrets.GITHUB_TOKEN }}
        TMPFILE=$(mktemp)
        git diff > "${TMPFILE}"
        ./reviewdog \
          -name="scalafmt" \
          -f=diff \
          -f.diff.strip=1 \
          -reporter="github-pr-review" \
          -filter-mode="diff_context" \
          -fail-on-error="false" \
          -level="warning" <"${TMPFILE}"
    - run: |
        while ! mysqladmin ping -h"127.0.0.1" ; do
          echo "await mysql start"
          sleep 1
        done
        mysql -h 127.0.0.1 -e 'GRANT ALL ON *.* TO squeryl@"localhost"IDENTIFIED BY "squeryl";FLUSH PRIVILEGES;' -uroot -proot
    - run: |
       export PGPASSWORD="postgres"
       psql -h 127.0.0.1 -c "CREATE ROLE squeryl WITH SUPERUSER LOGIN PASSWORD 'squeryl';" -U postgres
    - run: cp org.squeryl.tests.cfg.ci org.squeryl.tests.cfg
    - run: rm -r src/test/scala/org/squeryl/oracle/
    - run: rm -r src/test/scala/org/squeryl/mssql/
    - run: sbt -v "+ test"
